@startuml
title TextEncodingEnum â€” v1.2 (enumId / targetPath / sourcePath


' Dummy Class used in generation of an enum.json file. Class name must end with "_genEnum"
class TextEncoding_genEnum {
}
note top of TextEncoding_genEnum
This class specifies the enum file TextEncoding
 - it provides an example of the features that can be inclucded in an enum file
 - see the generated enum file for details at \packages\core\json\enums\commonLib\TextEncodingEnum.json
end note

note right of TextEncoding_genEnum
SCHEMAHINTS
  title: TextEncoding_genEnum
  field encoding:
    desc: Character encoding label for ingest/presentation edges. Internal storage is UTF-8.
    enumDefine:
      enumId: /core/commonLib/TextEncodingEnum
      targetPath: /core/json/enums/commonLib/TextEncodingEnum
      sourcePath: /core/puml/commonLib/TextEncodingEnum.puml
      title: TextEncodingEnum
      type: string
      description: Encodings accepted on ingest and at presentation edges; internal is always UTF-8.
      generate: true
      enum: [UTF-8, windows-1252, ISO-8859-1, ISO-8859-15, Shift_JIS, GB18030, Big5]
      x-enumNames: [UTF-8, Windows Western (1252), ISO Latin-1, ISO Latin-9, Shift JIS, GB 18030, Big5]
      x-enumDescriptions:
        - Unicode Transformation Format, 8-bit; REQUIRED internal encoding.
        - Windows Western code page 1252.
        - ISO 8859-1 Latin-1 single-byte.
        - ISO 8859-15 Latin-9; adds Euro sign.
        - Japanese legacy encoding (CP932 family).
        - PRC national standard; modern superset covering Unicode.
        - Traditional Chinese legacy encoding.
end note

@enduml
