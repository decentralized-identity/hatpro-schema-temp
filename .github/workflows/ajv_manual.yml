name: Ajv Manual Validation

on:
  workflow_dispatch: {}

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install ajv-cli
        run: npm i -g ajv-cli@5

      - name: Debug env
        run: |
          node -v
          npm -v
          ajv --version || true
          pwd
          ls -la

      - name: Validate all JSON Schemas (if present)
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob globstar

          # Collect candidates from both layouts
          declare -a RAW
          RAW+=(schemas/**/*.json)
          RAW+=(schemas/*.json)
          RAW+=(packages/**/json/schemas/**/*.json)
          RAW+=(packages/**/json/schemas/*.json)

          # De-duplicate paths (bash 4+ assoc-array trick)
          declare -A SEEN=()
          declare -a SCHEMAS=()
          for f in "${RAW[@]}"; do
            if [[ -z "${SEEN["$f"]+x}" ]]; then
              SEEN["$f"]=1
              SCHEMAS+=("$f")
            fi
          done

          echo "Found ${#SCHEMAS[@]} unique schema file(s)."
          if [ ${#SCHEMAS[@]} -eq 0 ]; then
            echo "No JSON Schemas found; skipping."
            exit 0
          fi

          fail=0
          for s in "${SCHEMAS[@]}"; do
            echo "Compiling $s"

            # Build ref list with all OTHER schemas (exclude self)
            REF_ARGS=()
            for r in "${SCHEMAS[@]}"; do
              if [[ "$r" != "$s" ]]; then
                REF_ARGS+=(-r "$r")
              fi
            done

            if ! ajv compile -s "$s" "${REF_ARGS[@]}" --spec=draft2020; then
              echo "Failed: $s"
              fail=1
            fi
          done

          if [ "$fail" -ne 0 ]; then
            echo "One or more schemas failed to compile."
            exit 1
          fi

          echo "All schemas compiled successfully."
