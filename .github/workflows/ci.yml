# ci.yml â€” v2025-10-21a
# - Node 20 + npm ci
# - ajv-cli + ajv-formats for schema compile
# - robust globbing (globstar) + de-dup + preload refs
# - run generator (tools/generate-json-from-puml.mjs) if present
# - run node validator only if generated schemas exist (otherwise skip)

name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install deps
        run: npm ci

      # ----- Schema compile with ajv-cli (raw schemas) -----
      - name: Install ajv-cli and formats
        run: npm i -g ajv-cli@5 ajv-formats@3

      - name: Validate all JSON Schemas (if present)
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob globstar

          # Collect candidate schema files from common layouts
          declare -a RAW
          RAW+=(schemas/**/*.json)
          RAW+=(schemas/*.json)
          RAW+=(packages/**/json/schemas/**/*.json)
          RAW+=(packages/**/json/schemas/*.json)

          # De-duplicate
          declare -A SEEN=()
          declare -a SCHEMAS=()
          for f in "${RAW[@]}"; do
            if [[ -z "${SEEN["$f"]+x}" ]]; then
              SEEN["$f"]=1
              SCHEMAS+=("$f")
            fi
          done

          echo "Found ${#SCHEMAS[@]} unique schema file(s)."
          if [ ${#SCHEMAS[@]} -eq 0 ]; then
            echo "No JSON Schemas found; skipping."
            exit 0
          fi

          # Compile each schema with all others preloaded as refs (skip self)
          fail=0
          for s in "${SCHEMAS[@]}"; do
            echo "Compiling $s"
            REF_ARGS=()
            for r in "${SCHEMAS[@]}"; do
              [[ "$r" != "$s" ]] && REF_ARGS+=(-r "$r")
            done
            if ! ajv compile -s "$s" "${REF_ARGS[@]}" -c ajv-formats --spec=draft2020; then
              echo "Failed: $s"
              fail=1
            fi
          done
          if [ "$fail" -ne 0 ]; then
            echo "One or more schemas failed to compile."
            exit 1
          fi
          echo "All schemas compiled successfully."
      # -----------------------------------------------------

      # ----- Generate per-package schemas (your tool) -----
      - name: Generate Schemas
        if: ${{ hashFiles('tools/generate-json-from-puml.mjs') != '' }}
        run: node tools/generate-json-from-puml.mjs
      # ----------------------------------------------------

      # ----- Validate samples via Node (only if generated schemas exist) -----
      - name: Validate samples via Node script (if generated schemas exist)
        if: ${{ hashFiles('packages/**/json/schemas/**/*.json') != '' && hashFiles('tools/validate-with-ajc.mjs') != '' }}
        run: node tools/validate-with-ajc.mjs

      - name: Skip Node sample validation (no generated schemas found)
        if: ${{ hashFiles('packages/**/json/schemas/**/*.json') == '' }}
        run: echo "Skipping Node sample validation: no schemas under packages/**/json/schemas. Run tools/generate-json-from-puml.mjs first."
      # ----------------------------------------------------------------------
