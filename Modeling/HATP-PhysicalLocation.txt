'TODOs
' - split out the unique Physical Location classes from those
'   that belong in a common library (e.g., Locale, DateRange, 
'   AirPort, PriotizedStringList, etc.)  

@startuml
skinparam groupInheritance 1
page 1x3

title Travel Profile - Physical Location
' Version 0.1
' 
 
class TravelProfile{  
  ' Travel Profile Physical Lcoation from Excel: 24-11-13 Draft Presentation Schema Structure 
  name Name
  travelerID VerifiableIdentifier
  defaultLocale Locale
  location[] PhysicalLocation
  ...
}

' classes used by TravelProfile
  Class Name{
  ' TBD
  }

  Class Locale{}
  
  Class VerifiableIdentifier{
    didUrl DidUrl  
    ' description "URL using W3C DID URL Syntax
  }

  Class PhysicalLocation{
    locationType LocationTypes
    localizedLocation[] LocalizedLocation
    countryCode string
    countryCodeFormat string = "ISO 3166"
    language string 
    ' why is language included in Location?
    languageCodeFormat string = "ISO 639-1"
    isPhysical boolean
    isMailable boolean
    isDeliverable boolean
    isDroneAccessible boolean
    isUsableForVerification boolean
    navLat string
    navLong string
    altitude string
    latlongaltformat string = "ISO 6709"
    validDates[] DateRange
    defaultAirport[] PrioritizedAirport
    defatulTrainStation[] PriortizedStringList
   }

  Class LocalizedLocation{
    locale Locale
    nickname string
    addressLine1 string
    addressLine2 string
    city string
    postalCode string
    postalCodeLocale PostalCodeLocale 
    ' postalCodeLocale needs a collection of object types
    ' that specify valid postal codes for any location
    stateCodeLocale StatedCodeLocale
    ' stateCodeLocale needs a collection of object types
    ' that specify valid state codes for any location
  }

  enum LocationTypes {
    personal,
    business,
    both
  }

  Class DateRange{
    start string
    end string
    dateTimeFormat string = "ISO 8601"
  }

  Class Airport {
    code string
    airportCodeFormat string = "IATA code"
    name[] Intl_String
  }

  Class PrioritizedAirport{
    priority integer
    airport Airport
  }

  Class PriortizedStringList{
    priority integer
    itemname[] Intl_String
  }

' relationships from TravelProfile to property classes
TravelProfile::travelerID "1" o-- "1" VerifiableIdentifier 
TravelProfile::name "1" o-- "n" Name
TravelProfile::defaultLocale "1" o-- "n" Locale
' description "en or en-US" JSON
TravelProfile::location "1" o-- "n" PhysicalLocation
PhysicalLocation::localizedLocation "1" o-- "n" LocalizedLocation
PhysicalLocation::validDates "1" o-- "2" DateRange
PhysicalLocation::defaultAirport "1" o-- "n" PrioritizedAirport
PrioritizedAirport::airport "1" o-- "1" Airport
PhysicalLocation::locationType "1" o-- "1" LocationTypes
PhysicalLocation::defatulTrainStation "1" o-- "n" PriortizedStringList


note top of TravelProfile
  Core/base class for Travel Profile
end note


@enduml